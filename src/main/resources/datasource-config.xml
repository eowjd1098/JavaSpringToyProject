<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd">

    <!-- DataSource 추가 -->
    <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
        <qualifier value="main" ></qualifier>
        <property name="driverClass" value="${dev.datasource.main.driverClass}"></property>
        <property name="jdbcUrl" value="${dev.datasource.main.url}"/>
        <property name="user" value="${dev.datasource.main.user}"/>
        <property name="password" value="${dev.datasource.main.password}"/>
    </bean>

    <!-- SqlSessionFactoryBean 생성 -->
    <!-- dataSource에 앞서 생성했던 dataSource Bean을 참조 -->
    <!-- configLocation에 mybatis의 설정(typeHandlers, typeAliases등) xml 참조 -->
    <!-- mapperLocations에 Query를 작성한 mapper xml 경로 참조 -->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean" name="dev">
        <qualifier value="main" />
        <property name="dataSource" ref="dataSource" />
        <property name="configLocation" value="classpath:/mybatis-config.xml" />
        <property name="mapperLocations" value="classpath*:/org/our/freecommit/sqlmap/mappers/*.xml" />
    </bean>

    <!-- Mapper interface scanner -->
    <!-- Mapper interface scann할 basePackage 지정 -->
    <!-- Mapper interface scann할 annotationClass 지정 -->
    <!-- sqlSessionFactoryBeanName에 앞서 생성한 sqlSessionFactoryBeanName Bean 참조 -->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="org.our.freecommit" />
        <property name="annotationClass" value="org.springframework.stereotype.Repository" ></property>
        <property name="sqlSessionFactoryBeanName" value="dev"/>
    </bean>

    <!-- TransactionManager 등록 -->
    <!-- dataSource에 앞서 생성했던 dataSource Bean을 참조 -->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
    </bean>

    <!-- @Transactional 활성화 -->
    <tx:annotation-driven mode="proxy" transaction-manager="transactionManager"/>

</beans>